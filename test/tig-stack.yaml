apiVersion: v1
kind: Service
metadata:
  name: telegraf
  labels:
    app: telegraf
spec:
  selector:
    app: telegraf
  ports:
  - name: http
    port: 8125
    targetPort: 8125
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  selector:
    app: influxdb
  ports:
  - name: http
    port: 8086
    targetPort: 8086
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  labels:
    app: telegraf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      containers:
      - name: telegraf
        image: telegraf
        volumeMounts:
        - name: config
          mountPath: /etc/telegraf
        ports:
        - containerPort: 8125
        env:
        - name: INFLUXDB_HOST
          value: "influxdb"
        - name: INFLUXDB_PORT
          value: "8086"
        - name: INFLUXDB_DB
          value: "influx"
        - name: INFLUXDB_ADMIN_USER
          value: "admin"
        - name: INFLUXDB_ADMIN_PASSWORD
          value: "admin"
      volumes:
      - name: config
        configMap:
          name: telegraf-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - name: influxdb
        image: influxdb:1.8-alpine
        ports:
        - containerPort: 8086
        env:
        - name: INFLUXDB_DB
          value: "influx"
        - name: INFLUXDB_ADMIN_USER
          value: "admin"
        - name: INFLUXDB_ADMIN_PASSWORD
          value: "admin"
        volumeMounts:
        - name: data
          mountPath: /var/lib/influxdb
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: influxdb-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_INSTALL_PLUGINS
          value: ""
        volumeMounts:
        - name: data
          mountPath: /var/lib/grafana
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: grafana-data-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
